{"version":3,"sources":["../../src/redux/thunk.ts","../../node_modules/redux-thunk/es/index.js"],"sourcesContent":["import createThunkMiddleware from 'redux-thunk'\n\nexport const thunkMiddleware = createThunkMiddleware\n","/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,IAAA,eAAAC,EAAAH,GCGA,SAASI,EAAsBC,EAAe,CAG5C,IAAIC,EAAa,SAAoBC,EAAM,CACzC,IAAIC,EAAWD,EAAK,SAChBE,EAAWF,EAAK,SACpB,OAAO,SAAUG,EAAM,CACrB,OAAO,SAAUC,EAAQ,CAGvB,OAAI,OAAOA,GAAW,WAEbA,EAAOH,EAAUC,EAAUJ,CAAa,EAI1CK,EAAKC,CAAM,CACpB,CACF,CACF,EAEA,OAAOL,CACT,CAEA,IAAIM,EAAQR,EAAsB,EAGlCQ,EAAM,kBAAoBR,EAC1B,IAAOS,EAAQD,ED7BR,IAAME,EAAkBC","names":["thunk_exports","__export","thunkMiddleware","__toCommonJS","createThunkMiddleware","extraArgument","middleware","_ref","dispatch","getState","next","action","thunk","es_default","thunkMiddleware","es_default"]}