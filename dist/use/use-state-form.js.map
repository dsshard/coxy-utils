{"version":3,"sources":["../../src/use/use-state-form.ts"],"sourcesContent":["import { useCallback, useState } from 'react'\n\ntype BreakDownObject<O, R = void> = {\n  [K in keyof O as string]: K extends string\n    ? R extends string\n      ? // Prefix with dot notation as well\n        // eslint-disable-next-line no-use-before-define\n        `${R}.${K}` | ObjectDotNotation<O[K], `${R}.${K}`>\n      : // eslint-disable-next-line no-use-before-define\n        K | ObjectDotNotation<O[K], K>\n    : never\n}\n\ntype ObjectDotNotation<O, R = void> = O extends string\n  ? R extends string\n    ? R\n    : never\n  : BreakDownObject<O, R>[keyof BreakDownObject<O, R>]\n\nfunction setterObjectValue(obj, keys, value) {\n  const keysArray = typeof keys === 'string' ? keys.split('.') : keys\n  const key = keysArray.shift()\n\n  if (keysArray.length === 0) {\n    obj[key] = value\n    return obj\n  }\n  if (!obj[key] === undefined) {\n    obj[key] = {}\n  }\n  setterObjectValue(obj[key], keysArray, value)\n  return obj\n}\n\nexport const useStateForm = <T>(initialValue?: Partial<T>) => {\n  const initial = (initialValue || {}) as T\n  const [values, setValuesByKey] = useState<T>(initial as T)\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  const clear = useCallback(() => {\n    setValuesByKey(() => initial)\n  }, [])\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  const setValue = useCallback(\n    (key: ObjectDotNotation<T>, val?: unknown) => {\n      if (val !== undefined) {\n        setValuesByKey((data) => {\n          const res = setterObjectValue(data, key, val)\n          return { ...res }\n        })\n        return\n      }\n\n      return (value) => {\n        setValuesByKey((data) => {\n          const res = setterObjectValue(data, key, value)\n          return { ...res }\n        })\n      }\n    },\n    [values],\n  )\n\n  return [values, setValue, clear] as const\n}\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,kBAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAsC,iBAmBtC,SAASC,EAAkBC,EAAKC,EAAMC,EAAO,CAC3C,IAAMC,EAAY,OAAOF,GAAS,SAAWA,EAAK,MAAM,GAAG,EAAIA,EACzDG,EAAMD,EAAU,MAAM,EAE5B,OAAIA,EAAU,SAAW,GACvBH,EAAII,CAAG,EAAIF,EACJF,IAEL,CAACA,EAAII,CAAG,IAAM,SAChBJ,EAAII,CAAG,EAAI,CAAC,GAEdL,EAAkBC,EAAII,CAAG,EAAGD,EAAWD,CAAK,EACrCF,EACT,CAEO,IAAMJ,EAAmBS,GAA8B,CAC5D,IAAMC,EAAWD,GAAgB,CAAC,EAC5B,CAACE,EAAQC,CAAc,KAAI,YAAYF,CAAY,EAGnDG,KAAQ,eAAY,IAAM,CAC9BD,EAAe,IAAMF,CAAO,CAC9B,EAAG,CAAC,CAAC,EAGCI,KAAW,eACf,CAACN,EAA2BO,IAAkB,CAC5C,GAAIA,IAAQ,OAAW,CACrBH,EAAgBI,IAEP,CAAE,GADGb,EAAkBa,EAAMR,EAAKO,CAAG,CAC5B,EACjB,EACD,MACF,CAEA,OAAQT,GAAU,CAChBM,EAAgBI,IAEP,CAAE,GADGb,EAAkBa,EAAMR,EAAKF,CAAK,CAC9B,EACjB,CACH,CACF,EACA,CAACK,CAAM,CACT,EAEA,MAAO,CAACA,EAAQG,EAAUD,CAAK,CACjC","names":["use_state_form_exports","__export","useStateForm","__toCommonJS","import_react","setterObjectValue","obj","keys","value","keysArray","key","initialValue","initial","values","setValuesByKey","clear","setValue","val","data"]}