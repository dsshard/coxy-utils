{"version":3,"sources":["../../src/data/array-search-in-by-field.ts"],"sourcesContent":["type FieldExtractor<T> = (sub: T) => string\n\nexport function escapeRegex(string: string) {\n  const reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g\n  const reHasRegExpChar = RegExp(reRegExpChar.source)\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string || ''\n}\n\nexport function searchArrayFilter<T>(array: T[], searchString: string, _fields: (keyof T)[] | FieldExtractor<T>) {\n  if (!searchString) {\n    return array\n  }\n  const reg = new RegExp(escapeRegex(searchString).toLowerCase(), 'ig')\n  return array.filter((sub: T) => {\n    const fields = (typeof _fields === 'function' ? _fields(sub) : _fields.map((field) => sub[field])) as string[]\n\n    return fields.some((field) => !!encodeURI(String(field).toLowerCase()).match(reg))\n  })\n}\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,iBAAAE,EAAA,sBAAAC,IAAA,eAAAC,EAAAJ,GAEO,SAASE,EAAYG,EAAgB,CAC1C,IAAMC,EAAe,sBACfC,EAAkB,OAAOD,EAAa,MAAM,EAClD,OAAOD,GAAUE,EAAgB,KAAKF,CAAM,EAAIA,EAAO,QAAQC,EAAc,MAAM,EAAID,GAAU,EACnG,CAEO,SAASF,EAAqBK,EAAYC,EAAsBC,EAA0C,CAC/G,GAAI,CAACD,EACH,OAAOD,EAET,IAAMG,EAAM,IAAI,OAAOT,EAAYO,CAAY,EAAE,YAAY,EAAG,IAAI,EACpE,OAAOD,EAAM,OAAQI,IACH,OAAOF,GAAY,WAAaA,EAAQE,CAAG,EAAIF,EAAQ,IAAKG,GAAUD,EAAIC,CAAK,CAAC,GAElF,KAAMA,GAAU,CAAC,CAAC,UAAU,OAAOA,CAAK,EAAE,YAAY,CAAC,EAAE,MAAMF,CAAG,CAAC,CAClF,CACH","names":["array_search_in_by_field_exports","__export","escapeRegex","searchArrayFilter","__toCommonJS","string","reRegExpChar","reHasRegExpChar","array","searchString","_fields","reg","sub","field"]}